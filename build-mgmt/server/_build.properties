###############################################################################
# Copyright (c) 2003, 2006 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################

# Version of org.eclipse.pdebuild
# Eclipse 3.4.1 -> pdeBuildPluginVersion=3.4.1.R34x_v20080805
pdeBuildPluginVersion=<pde build plugin>

# Version of org.eclipse.equinox.launcher
# Eclipse 3.4.1 -> equinoxLauncherPluginVersion=1.0.101.R34x_v20080819
equinoxLauncherPluginVersion=<Equinox version>

# Specify the directory of the Eclipse installation
eclipseLocation=<Path to the installation location of eclipse>

# Specify the base directory to use for the build
dir.buildBase=<Path to the 'build-mgmt' directory>

# The path where all the build action will happen
build.builderDir=${dir.buildBase}/build-dir

############# BASE LOCATION #########################
#
# Specify the directory of the base under which your
# your build target is located. This directory should
# contain the RCP Runtime Binary that you want to 
# compile against.
#
#####################################################
base=${dir.buildBase}/base-dir/

############# PRODUCT/PACKAGING CONTROL #############
product=${dir.buildDir}/plugins/at.rc.tacos.server/server.product
runPackager=true

# The prefix that will be used in the generated archive.
archivePrefix=tacosServer

# The location underwhich all of the build output will be collected.
collectingFolder=${archivePrefix}

# The list of {os, ws, arch} configurations to build.  
configs=win32, win32, x86 

############## BUILD NAMING CONTROL ################
# The directory into which the build elements are fetched and where the build takes place.
buildDirectory=${dir.buildDir}

# Type of build.  Used in naming the build output.  Typically this value is
# one of I, N, M, S, ...
buildType=I

# ID of the build.  Used in naming the build output.
buildId=TacosServer

# Label for the build.  Used in naming the build output
buildLabel=${buildType}.${buildId}

# Timestamp for the build.  Used in naming the build output
timestamp=007

############# BASE CONTROL #############
# Settings for the base Eclipse components and Java class libraries 
baseLocation=${base}/eclipse
#Os/Ws/Arch/nl of the eclipse specified by baseLocation
baseos=win32
basews=win32
basearch=x86

#this property indicates whether you want the set of plug-ins and features to be considered during the build to be limited to the ones reachable from the features / plugins being built
filteredDependencyCheck=false

skipBase=true
eclipseURL=<url for eclipse download site>
eclipseBuildId=<Id of Eclipse build to get>
eclipseBaseURL=${eclipseURL}/eclipse-platform-${eclipseBuildId}-win32.zip

############# MAP FILE CONTROL ################
# This section defines CVS tags to use when fetching the map files from the repository.
# If you want to fetch the map file from repository / location, change the getMapFiles target in the customTargets.xml

skipMaps=false
mapsRepo=:pserver:anonymous@example.com/path/to/repo
mapsRoot=maps
mapsCheckoutTag=HEAD

#tagMaps=true
mapsTagTag=v${buildId}

############ REPOSITORY CONTROL ###############
# This section defines properties parameterizing the repositories where plugins, fragments
# bundles and features are being obtained from. 

# The tags to use when fetching elements to build.
# By default thebuilder will use whatever is in the maps.  
# This value takes the form of a comma separated list of repository identifier (like used in the map files) and the 
# overriding value
# For example fetchTag=CVS=HEAD, SVN=v20050101
# fetchTag=HEAD
skipFetch=true

############# JAVA COMPILER OPTIONS ##############
# The location of the Java jars to compile against.  Typically the rt.jar for your JDK/JRE
bootclasspath=${java.home}/lib/rt.jar

# Specify the output format of the compiler log when eclipse jdt is used
logExtension=.log

# Whether or not to include debug info in the output jars
javacDebugInfo=false 

# Whether or not to fail the build if there are compiler errors
javacFailOnError=true

# Enable or disable verbose mode of the compiler
javacVerbose=true

# Extra arguments for the compiler. These are specific to the java compiler being used.
#compilerArg=

# Default value for the version of the source code. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacSource in build.properties
javacSource=1.6

# Default value for the version of the byte code targeted. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacTarget in build.properties.
javacTarget=1.6
