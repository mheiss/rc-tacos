<project name="TacosBuilder" default="build">
	<property file="build.properties" />
	
	<!-- Basic initializsation -->
	<target name="init">
		<!-- Check required files -->
		<available file="build.properties" property="build.file" />
		<available file="config/log4j.properties" property="log.file" />
		<available file="config/system.properties" property="system.file" />
		<available file="config/persistence.xml" property="jpa.file" />
		<fail unless="build.file" message="Please provide a configuration file for the build." />
		<fail unless="log.file" message="Please provide a log file for the application." />
		<fail unless="jpa.file" message="Please provide a JPA file for the application." />
		<fail unless="system.file" message="Please provide a system configuration file." />
		
		<!-- Common properties for the build script -->
		<property name="project.name" value="tacos" />
		<property name="tacos.web" value="at.redcross.tacos.web" />
		<property name="tacos.dbal" value="at.redcross.tacos.dbal" />
		<property name="tacos.dbal.lib" value="at.redcross.tacos.dbal.lib" />
		<property name="tacos.logging" value="at.redcross.tacos.logging" />
		<property name="tacos.builder" value="at.redcross.tacos.build" />
		<property name="builder.dir" value="${base.dir}/${tacos.builder}/builder" />
		
		<!-- Configuration files needed for the application -->
		<property name="config.system" value="${base.dir}/${tacos.builder}/config/system.properties" />
		<property name="config.jpa" value="${base.dir}/${tacos.builder}/config/persistence.xml" />
		<property name="config.log4j" value="${base.dir}/${tacos.builder}/config/log4j.properties" />
	</target>
	
	<!-- cleanup the builder -->
	<target name="cleanup" depends="init">
		<echo message="Cleaning up the builder" />
		<delete dir="${builder.dir}" failonerror="false" />
	</target>
	
	<!-- Performs a clean rebuild -->
	<target name="build" depends="cleanup,setup-classpath">
		<echo message="Building application" />
		<mkdir dir="${builder.dir}/classes" />
		<mkdir dir="${builder.dir}/libs" />
		
		<!-- Compile the application -->
		<javac destdir="${builder.dir}/classes">
			<!-- external libs -->
			<classpath refid="application.classpath" />
			<classpath refid="tomcat.classpath" />
			<!-- application source -->
			<src path="${base.dir}/${tacos.dbal}/src" />
			<src path="${base.dir}/${tacos.web}/src" />
		</javac>
		
		<!-- Copy all needed libraries -->
		<copy todir="${builder.dir}/libs" preservelastmodified="true">
			<path refid="application.classpath"/>
		</copy>
		
		<!-- Create the war file -->
		<war destfile="${builder.dir}/${project.name}.war" webxml="${base.dir}/${tacos.web}/WebContent/WEB-INF/web.xml">
			<fileset dir="${base.dir}/${tacos.web}/WebContent" excludes="WEB-INF/lib/*.jar WEB-INF/classes/*" />
			<lib dir="${builder.dir}/libs" includes="*.jar" />
			<classes dir="${builder.dir}/classes" includes="*/**" />
			<zipfileset file="${config.log4j}" prefix="WEB-INF/classes" /> 
			<zipfileset file="${config.system}" prefix="WEB-INF/classes" /> 
			<zipfileset file="${config.jpa}" prefix="WEB-INF/classes/META-INF" /> 
		</war>
	</target>
	
	<!-- Define the application classpath -->
	<target name="setup-classpath" depends="init">
		<path id="application.classpath">
			<fileset dir="${base.dir}/${tacos.dbal}/lib" includes="*.jar" />
			<fileset dir="${base.dir}/${tacos.dbal.lib}/lib" includes="*.jar" />
			<fileset dir="${base.dir}/${tacos.logging}/lib" includes="*.jar" />
			<fileset dir="${base.dir}/${tacos.web}/WebContent/WEB-INF/lib" includes="*.jar" />
		</path>
		<path id="tomcat.classpath">
			<fileset dir="${tomcat.dir}/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
	</target>
</project>
