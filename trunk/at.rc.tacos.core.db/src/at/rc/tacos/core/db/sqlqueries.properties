# Register your queries here!

#Roster OK
list.RosterEntrys = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username , ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
				FROM roster ro \
				INNER JOIN servicetype st ON \
				ro.servicetype_ID LIKE st.servicetype_ID \
				INNER JOIN job j ON \
				ro.job_ID LIKE j.job_ID \
				INNER JOIN location lo ON \
				ro.location_ID LIKE lo.location_ID \
				INNER JOIN staffmembers e ON \
				ro.staffmember_ID LIKE e.staffmember_ID order by e.lastname;
list.RosterBystaffmemberID = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
						FROM roster ro \
						INNER JOIN servicetype st ON \
						ro.servicetype_ID LIKE st.servicetype_ID \
						INNER JOIN job j ON \
						ro.job_ID LIKE j.job_ID \
						INNER JOIN location lo ON \
						ro.location_ID LIKE lo.location_ID \
						INNER JOIN staffmembers e ON \
						ro.staffmember_ID LIKE e.staffmember_ID \
						WHERE ro.staffmember_ID = ?;
get.RosterByID = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					FROM roster ro \
					INNER JOIN servicetype st ON \
					ro.servicetype_ID = st.servicetype_ID \
					INNER JOIN job j ON \
					ro.job_ID = j.job_ID \
					INNER JOIN location lo ON \
					ro.location_ID = lo.location_ID \
					INNER JOIN staffmembers e ON \
					ro.staffmember_ID = e.staffmember_ID \
					WHERE ro.roster_ID = ?;
list.RosterByTime = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					FROM roster ro \
					INNER JOIN servicetype st ON \
					ro.servicetype_ID LIKE st.servicetype_ID \
					INNER JOIN job j ON \
					ro.job_ID LIKE j.job_ID \
					INNER JOIN location lo ON \
					ro.location_ID LIKE lo.location_ID \
					INNER JOIN staffmembers e ON \
					ro.staffmember_ID LIKE e.staffmember_ID \
					WHERE ro.endtime >= ? AND ro.starttime <= ? order by e.lastname;
					# 1.Startzeitpunkt - 2. Endezeitpunkt
list.RosterByTimeAndLocation = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					           FROM roster ro \
					           INNER JOIN servicetype st ON \
					           ro.servicetype_ID LIKE st.servicetype_ID \
					           INNER JOIN job j ON \
					           ro.job_ID LIKE j.job_ID \
					           INNER JOIN location lo ON \
					           ro.location_ID LIKE lo.location_ID \
					           INNER JOIN staffmembers e ON \
					           ro.staffmember_ID LIKE e.staffmember_ID \
					           WHERE ro.endtime >= ? AND ro.starttime <= ? AND ro.location_ID = ? order by e.lastname;
					           # 1.Startzeitpunkt - 2. Endezeitpunkt
list.RosterForRosterMonth = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					        FROM roster ro \
					        INNER JOIN servicetype st ON \
					        ro.servicetype_ID LIKE st.servicetype_ID \
					        INNER JOIN job j ON \
					        ro.job_ID LIKE j.job_ID \
					        INNER JOIN location lo ON \
					        ro.location_ID LIKE lo.location_ID \
					        INNER JOIN staffmembers e ON \
					        ro.staffmember_ID LIKE e.staffmember_ID \
					        WHERE ro.location_ID = ? \
					        AND DATEPART(month, ro.starttime) = ? \
					        AND DATEPART(year, ro.starttime) = ?
list.RosterForRosterMonthFilterFunction = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					                      FROM roster ro \
					                      INNER JOIN servicetype st ON \
					                      ro.servicetype_ID LIKE st.servicetype_ID \
					                      INNER JOIN job j ON \
					                      ro.job_ID LIKE j.job_ID \
					                      INNER JOIN location lo ON \
					                      ro.location_ID LIKE lo.location_ID \
					                      INNER JOIN staffmembers e ON \
					                      ro.staffmember_ID LIKE e.staffmember_ID \
					                      WHERE ro.location_ID = ? \
					                      AND DATEPART(month, ro.starttime) = ? \
					                      AND DATEPART(year, ro.starttime) = ? \
					                      AND (j.jobname = ? OR st.servicetype = ?)
list.RosterForRosterMonthFilterStaffMember = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					                         FROM roster ro \
					                         INNER JOIN servicetype st ON \
					                         ro.servicetype_ID LIKE st.servicetype_ID \
					                         INNER JOIN job j ON \
					                         ro.job_ID LIKE j.job_ID \
					                         INNER JOIN location lo ON \
					                         ro.location_ID LIKE lo.location_ID \
					                         INNER JOIN staffmembers e ON \
					                         ro.staffmember_ID LIKE e.staffmember_ID \
					                         WHERE ro.location_ID = ? \
					                         AND DATEPART(month, ro.starttime) = ? \
					                         AND DATEPART(year, ro.starttime) = ? \
					                         AND (ro.staffmember_ID = ?)
list.RosterForRosterMonthFilterFunctionAndStaffMember = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, ro.entry_createdBy, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby \
					                                    FROM roster ro \
					                                    INNER JOIN servicetype st ON \
					                                    ro.servicetype_ID LIKE st.servicetype_ID \
					                                    INNER JOIN job j ON \
					                                    ro.job_ID LIKE j.job_ID \
					                                    INNER JOIN location lo ON \
					                                    ro.location_ID LIKE lo.location_ID \
					                                    INNER JOIN staffmembers e ON \
					                                    ro.staffmember_ID LIKE e.staffmember_ID \
					                                    WHERE ro.location_ID = ? \
					                                    AND DATEPART(month, ro.starttime) = ? \
					                                    AND DATEPART(year, ro.starttime) = ? \
					                                    AND (j.jobname = ? OR st.servicetype = ?) \
					                                    AND (ro.staffmember_ID = ?)					                         			        
get.RosterEntryId = SELECT roster_ID FROM roster WHERE staffmember_ID = ? AND starttime = ?;
insert.RosterEntry = INSERT INTO roster(roster_ID, location_ID, staffmember_ID, servicetype_ID, job_ID, starttime, endtime, checkIn, checkOut, note, standby, entry_createdBy) \
					 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
get.nextRosterID = select distinct dbo.f_roster_getNextID();					 
					 get.nextRosterID = SELECT DISTINCT dbo.f_roster_getNextID();
update.RosterEntry = UPDATE roster SET location_ID = ?, staffmember_ID = ?, servicetype_ID = ?, job_ID = ?, starttime = ?, endtime = ?, checkIn = ?, checkOut = ?, note = ?, standby = ?, entry_createdBy = ? WHERE roster_ID = ?
delete.RosterEntry = DELETE from roster WHERE roster_ID = ?;

#userslogin OK
get.loginByUsername = SELECT * from userlogin WHERE username = ?;
insert.User = INSERT INTO userlogin(username, pwd, authorisation, isloggedin, locked) VALUES(?, ?, ?, ?, ?);
update.User = UPDATE userlogin SET authorisation = ?, isloggedin = ?, locked = ? WHERE username = ?;
update.Password = UPDATE userlogin SET pwd = ? WHERE username = ?;
update.lockUser = UPDATE userlogin SET locked = ? WHERE username = ?;
#delete.User = DELETE FROM userlogin WHERE username = ?;
check.UserLogin = SELECT username, locked FROM userlogin WHERE username = ? AND pwd = ?;
list.User = select * from userlogin;
list.UserByUsername = SELECT * from userlogin WHERE username = ?;

#phonenumbers OK
get.PhoneID = SELECT phonenumber_ID FROM phonenumbers WHERE phonenumber LIKE ?;
update.Phonenumber = UPDATE phonenumbers SET phonenumber = ?, phonename = ? WHERE phonenumber_ID = ?;
delete.Phonenumber = DELETE FROM phonenumbers WHERE phonenumber_ID = ?;
list.PhonenumbersOfMemberID = SELECT ph.phonenumber, ph.phonenumber_ID, ph.phonename \
							FROM phone_staffmember phst \
							INNER JOIN phonenumbers ph ON \
							phst.phonenumber_ID = ph.phonenumber_ID \
							WHERE phst.staffmember_ID = ? order by ph.phonename;
insert.Phonestaffmember = INSERT INTO phone_staffmember VALUES(?,?);
#update.Phonestaffmember = UPDATE phone_staffmember SET ? = ? WHERE ? = ?;
delete.PhonestaffmemberByPhonenumberID = DELETE FROM phone_staffmember WHERE phonenumber_ID = ?;
check.ifPhoneExists = SELECT * FROM phonenumbers WHERE phonenumber_ID =? AND phonenumber = ? AND phonename = ?;

#phone
get.phoneByID = SELECT phonenumber, phonename, phonenumber_ID FROM phonenumbers WHERE phonenumber_ID = ?;
get.phoneByName = SELECT phonenumber, phonename, phonenumber_ID FROM phonenumbers WHERE phonename = ?;
get.phoneID = SELECT phonenumber_ID FROM phonenumbers WHERE phonenumber = ? AND phonename = ?;
list.phones = SELECT phonenumber, phonename, phonenumber_ID FROM phonenumbers order by phonename;
update.phone = UPDATE phonenumbers SET phonenumber = ?, phonename = ? WHERE phonenumber_ID = ?;
remove.phone = DELETE FROM phonenumbers WHERE phonenumber_ID = ?;
insert.phone = INSERT INTO phonenumbers(phonenumber_ID, phonenumber, phonename) VALUES(?, ?, ?);
get.nextPhoneID = select distinct dbo.f_phone_getNextID();
delete.phonesOfStaffMember = DELETE FROM phone_staffmember WHERE staffmember_ID = ?;
add.phonesOfStaffMember = INSERT INTO phone_staffmember(staffmember_ID, phonenumber_ID) VALUES(?, ?);
get.nextPhoneID = SELECT DISTINCT dbo.f_phone_getNextID();
#location OK
list.locations = SELECT lo.location_ID, lo.locationname, lo.street, lo. streetnumber, lo.city, lo.zipcode, lo.phonenumber_ID, pn.phonenumber, pn.phonename, lo.note \
				 FROM location lo \
				 LEFT JOIN phonenumbers pn ON \
				 lo.phonenumber_ID = pn.phonenumber_ID order by lo.locationname;
get.LocationByID = SELECT lo.location_ID, lo.locationname, lo.street, lo. streetnumber, lo.city, lo.zipcode, lo.phonenumber_ID, pn.phonenumber, pn.phonename, lo.note \
				FROM location lo \
				LEFT JOIN phonenumbers pn ON \
				lo.phonenumber_ID = pn.phonenumber_ID \
				WHERE lo.location_ID = ?;
get.locationByName = SELECT lo.location_ID, lo.locationname, lo.street, lo. streetnumber, lo.city, lo.zipcode, lo.phonenumber_ID, pn.phonenumber, pn.phonename, lo.note \
				FROM location lo \
				LEFT JOIN phonenumbers pn ON \
				lo.phonenumber_ID LIKE pn.phonenumber_ID \
				WHERE lo.locationname = ?;
insert.location = INSERT INTO location(location_ID, locationname, street, streetnumber, zipcode, city, note, phonenumber_ID) \
				  VALUES(?, ?, ?, ?, ?, ?, ?, ?);
get.locationID = SELECT location_ID FROM location WHERE locationname = ? AND zipcode = ? AND street = ?;
update.location = UPDATE location SET locationname = ?, street = ?, streetnumber = ?, zipcode = ?, city = ?, note = ?, phonenumber_ID = ? WHERE location_ID = ?;
delete.location = DELETE FROM location WHERE location_ID = ?;
get.nextLocationID = select distinct dbo.f_location_getNextID();
#staffmembers OK
list.staffmembers = SELECT u.username, e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, e.email, u.authorisation, u.isloggedin, u.locked, u.pwd, e.city, e.street \
						FROM staffmembers e \
						INNER JOIN userlogin u ON \
						e.username = u.username \
						INNER JOIN location lo ON \
						e.primaryLocation = lo.location_ID order by e.lastname;
list.staffmembersFromLocation = SELECT u.username, e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, e.email, u.authorisation, u.isloggedin, u.locked, u.pwd, e.city, e.street \
						FROM staffmembers e \
						INNER JOIN userlogin u ON \
						e.username = u.username \
						INNER JOIN location lo ON \
						e.primaryLocation = lo.location_ID \
						WHERE e.primaryLocation = ? order by e.lastname;
get.staffmemberByID = SELECT u.username, e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, e.email, u.authorisation, u.isloggedin, u.locked, u.pwd, e.city, e.street \
						FROM staffmembers e \
						INNER JOIN userlogin u ON \
						e.username = u.username \
						INNER JOIN location lo ON \
						e.primaryLocation = lo.location_ID \
						WHERE e.staffmember_ID = ?;
get.staffmemberbyUsername = SELECT u.username, e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, e.email, u.authorisation, u.isloggedin, u.locked, u.pwd, e.city, e.street \
						FROM staffmembers e \
						INNER JOIN userlogin u ON \
						e.username = u.username \
						INNER JOIN location lo ON \
						e.primaryLocation = lo.location_ID \
						WHERE u.username = ?;
insert.staffmember = INSERT INTO staffmembers(staffmember_ID, primaryLocation, firstname, lastname, sex, birthday, email, street, city, username) \
					 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
get.nextStaffmemberID = select distinct dbo.f_staffmember_getNextID();					 
get.staffmemberId = SELECT staffmember_ID FROM staffmembers WHERE username = ?;
update.staffmember = UPDATE staffmembers SET primaryLocation = ?, firstname = ?, lastname = ?, sex = ?, birthday = ?, email = ?, street = ?, city = ? WHERE staffmember_ID = ?;

#vehicles OK
list.vehicles =  SELECT v.vehicle_ID, v.medic1_ID, v.medic2_ID, v.driver_ID, v.currentLocation, v.primaryLocation, v.vehicletype, v.readyForAction, v.outOfOrder, v.phonenumber_ID, pn.phonenumber, pn.phonename, v.note, v.lastDestinationFree, v.transportStatus \
				FROM vehicles v \
				LEFT JOIN phonenumbers pn ON \
				v.phonenumber_ID LIKE pn.phonenumber_ID order by v.vehicle_ID;
get.vehicleByID = SELECT v.vehicle_ID, v.medic1_ID, v.medic2_ID, v.driver_ID, v.currentLocation, v.primaryLocation, v.vehicletype, v.readyForAction, v.outOfOrder, v.phonenumber_ID, pn.phonenumber, pn.phonename, v.note, v.lastDestinationFree, v.transportStatus \
				FROM vehicles v \
				LEFT JOIN phonenumbers pn ON \
				v.phonenumber_ID LIKE pn.phonenumber_ID \
				WHERE v.vehicle_ID = ?;
insert.vehicle = INSERT INTO vehicles(vehicle_ID, vehicletype, primaryLocation, currentLocation, phonenumber_ID, note, lastDestinationFree, readyForAction, outOfOrder) VALUES(?, ?, ?, ?, ? ,?, ?, ?, ?);
get.nextVehicleID = select distinct dbo.f_vehicle_getNextID();
update.vehicle = UPDATE vehicles SET driver_ID = ?, medic1_ID = ?, medic2_ID = ?, phonenumber_ID = ?, vehicletype = ?, currentLocation = ?, primaryLocation = ?, note = ?, lastDestinationFree = ?, readyForAction = ?, outOfOrder = ?, transportStatus = ? where vehicle_ID = ?;
delete.vehicle = DELETE FROM vehicles WHERE vehicle_ID = ?;

#disease
insert.disease = INSERT INTO disease(disease_ID, disease) VALUES(?, ?);
get.nextDiseaseID = select distinct dbo.f_disease_getNextID();
update.disease = UPDATE disease SET disease = ?  where disease_ID = ?;
list.diseases = SELECT * from disease order by disease;
delete.disease = DELETE FROM disease WHERE disease_ID = ?;
get.diseaseID = SELECT disease_ID FROM disease WHERE disease = ?;

#caller OK
insert.caller = INSERT INTO caller(caller_ID, callername, caller_phonenumber) \
				VALUES(?, ?, ?);
get.nextCallerID = select distinct dbo.f_caller_getNextID();				
get.callerByID = SELECT ca.callername, ca.caller_phonenumber, t.transport_ID \
		 	 FROM caller ca \
		 	 LEFT JOIN transports t ON \
			 ca.caller_ID = t.caller_ID \
			 WHERE caller_ID = ?;
get.callerID = SELECT caller_ID \
				FROM caller \
				WHERE callername = ? AND caller_phonenumber = ?;
update.caller = UPDATE caller SET callername = ?, caller_phonenumber = ? where caller_ID = ?;
list.callers = SELECT ca.*, t.transport_ID \
			   FROM caller ca \
			   LEFT JOIN transports t ON \
			   ca.caller_ID LIKE t.caller_ID;
remove.caller = DELETE FROM caller WHERE caller_ID = ?;

#transport OK
list.runningTransports = SELECT t.transport_ID, t.transportNr, t.planned_location, t.caller_ID, t.createdBy_user, t.disposedBy_user, t.note, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.disease, t.firstname, t.lastname, t.from_street, t.from_city, t.to_street, t.to_city, t.programstate, t.transporttype, t.priority, t.direction, t.dateOfTransport, \
						   av.vehicle_ID, av.vehicletype,av.driver_ID, av.driver_lastname,av.driver_firstname,av.medic1_ID,av.medic1_lastname,av.medic1_firstname, av.medic2_ID,av.medic2_lastname,av.medic2_firstname, av.location_ID, av.location_name, av.note, \
						   lo.locationname, lo.location_ID, \
						   ca.callername, ca.caller_phonenumber \
						 FROM transports t \
						 LEFT JOIN caller ca ON \
						 t.caller_ID = ca.caller_ID \
						 LEFT JOIN location lo ON \
					  	 lo.location_ID = t.planned_location \
						 LEFT JOIN assigned_vehicle av ON \
						 av.transport_ID = t.transport_ID \
						 WHERE t.programstate = ? OR t.programstate = ? order by t.priority;
list.prebookedTransports = SELECT t.transport_ID, t.transportNr, t.planned_location, t.caller_ID, t.createdBy_user, t.disposedBy_user, t.note, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.disease, t.firstname, t.lastname, t.from_street, t.from_city, t.to_street, t.to_city, t.programstate, t.transporttype, t.priority, t.direction, t.dateOfTransport, \
						  	ca.callername, ca.caller_phonenumber, \
						  	lo.locationname, lo.location_ID \
						  FROM transports t \
						  LEFT JOIN caller ca ON \
						  t.caller_ID = ca.caller_ID \
						  LEFT JOIN location lo ON \
					  	  lo.location_ID = t.planned_location \
						  WHERE t.programstate = ? order by t.departure;
list.archivedTransports = SELECT t.transport_ID, t.transportNr, t.planned_location, t.caller_ID, t.createdBy_user, t.disposedBy_user, t.note, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.disease, t.firstname, t.lastname, t.from_street, t.from_city, t.to_street, t.to_city, t.programstate, t.transporttype, t.priority, t.direction, t.dateOfTransport,\
						   av.vehicle_ID, av.vehicletype,av.driver_ID, av.driver_lastname,av.driver_firstname,av.medic1_ID,av.medic1_lastname,av.medic1_firstname, av.medic2_ID,av.medic2_lastname,av.medic2_firstname, av.location_ID, av.location_name, av.note, \
						   lo.locationname, lo.location_ID, \
						   ca.callername, ca.caller_phonenumber \
						  FROM transports t \
						  LEFT JOIN caller ca ON \
						  t.caller_ID = ca.caller_ID \
						  LEFT JOIN location lo ON \
					  	  lo.location_ID = t.planned_location \
						  LEFT JOIN assigned_vehicle av ON \
						  av.transport_ID = t.transport_ID \
						  WHERE t.dateOfTransport BETWEEN ? AND ? AND t.programstate = ? order by t.transportNr;
get.transportById = SELECT t.transport_ID, t.transportNr, t.planned_location, t.caller_ID, t.createdBy_user, t.disposedBy_user, t.note, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.disease, t.firstname, t.lastname, t.from_street, t.from_city, t.to_street, t.to_city, t.programstate, t.transporttype, t.priority, t.direction, t.dateOfTransport,\
					  av.vehicle_ID, av.vehicletype,av.driver_ID, av.driver_lastname,av.driver_firstname,av.medic1_ID,av.medic1_lastname,av.medic1_firstname, av.medic2_ID,av.medic2_lastname,av.medic2_firstname, av.location_ID, av.location_name, av.note, \
					  lo.locationname, lo.location_ID, \
					  ca.callername, ca.caller_phonenumber \
					FROM transports t \
					LEFT JOIN caller ca ON \
					t.caller_ID = ca.caller_ID \
					LEFT JOIN location lo ON \
					lo.location_ID = t.planned_location \
					LEFT JOIN assigned_vehicle av ON \
					av.transport_ID = t.transport_ID \
					WHERE t.transport_ID = ?;
get.transportNr = SELECT transportNr FROM transports WHERE transport_ID = ?;
get.MaxTransportNr = select max(transportNr) \
					 from transports t \
					 LEFT JOIN assigned_vehicle av \
					 ON t.transport_ID = av.transport_ID \
					 WHERE av.location_ID = ? and year = ?;
insert.transport = INSERT INTO transports(transport_ID, transportNr, direction, caller_ID, note, createdBy_user, priority, feedback, creationDate, departure, appointment, appointmentPatient, transporttype, disease, firstname, lastname, planned_location, from_street, from_city, to_street, to_city, programstate, dateOfTransport, disposedBy_user) \
				   VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
update.transport = UPDATE transports SET direction = ?, caller_ID = ?, note = ?, createdBy_user = ?, priority = ?, feedback = ?, creationDate = ?, departure = ?, appointment = ?, appointmentPatient = ?, transporttype = ?, disease = ?, firstname = ?, lastname = ?, planned_location = ?, from_street = ?, from_city = ?, to_street = ?, to_city = ?, programstate = ?, dateOfTransport = ?, transportNr = ?, disposedBy_user = ? WHERE transport_ID = ?; 
update.transportNr = UPDATE transports SET transportNr = ?, year = ? WHERE transport_ID = ?;
get.nextTransportID = SELECT DISTINCT dbo.f_transport_getNextID();
#archived transports by date and location (online used)
list.archivedTransportsByDateAndVehicleLocation = SELECT t.transport_ID, t.transportNr, t.planned_location, t.caller_ID, t.createdBy_user, t.disposedBy_user, t.note, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.disease, t.firstname, t.lastname, t.from_street, t.from_city, t.to_street, t.to_city, t.programstate, t.transporttype, t.priority, t.direction, t.dateOfTransport,\
						  av.vehicle_ID, av.vehicletype,av.driver_ID, av.driver_lastname,av.driver_firstname,av.medic1_ID,av.medic1_lastname,av.medic1_firstname, av.medic2_ID,av.medic2_lastname,av.medic2_firstname, av.location_ID, av.location_name, av.note, \
						  lo.locationname, lo.location_ID, \
						  ca.callername, ca.caller_phonenumber \
						  FROM transports t \
						  LEFT JOIN caller ca ON \
						  t.caller_ID = ca.caller_ID \
						  LEFT JOIN location lo ON \
					  	  lo.location_ID = t.planned_location \
						  LEFT JOIN assigned_vehicle av ON \
						  av.transport_ID = t.transport_ID \
						  WHERE t.dateOfTransport BETWEEN ? AND ? AND t.programstate = ? AND av.location_ID = ? order by t.transportNr;
list.archivedTransportsByDateAndTransportLocation = SELECT t.transport_ID, t.transportNr, t.planned_location, t.caller_ID, t.createdBy_user, t.disposedBy_user, t.note, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.disease, t.firstname, t.lastname, t.from_street, t.from_city, t.to_street, t.to_city, t.programstate, t.transporttype, t.priority, t.direction, t.dateOfTransport,\
						  av.vehicle_ID, av.vehicletype,av.driver_ID, av.driver_lastname,av.driver_firstname,av.medic1_ID,av.medic1_lastname,av.medic1_firstname, av.medic2_ID,av.medic2_lastname,av.medic2_firstname, av.location_ID, av.location_name, av.note, \
						  lo.locationname, lo.location_ID, \
						  ca.callername, ca.caller_phonenumber \
						  FROM transports t \
						  LEFT JOIN caller ca ON \
						  t.caller_ID = ca.caller_ID \
						  LEFT JOIN location lo ON \
					  	  lo.location_ID = t.planned_location \
						  LEFT JOIN assigned_vehicle av ON \
						  av.transport_ID = t.transport_ID \
						  WHERE t.dateOfTransport BETWEEN ? AND ? AND t.programstate = ? AND t.planned_location = ? order by t.transportNr;
#tmptransports
add.tmpTransport = INSERT INTO tmptransports(transportNr, location_ID, actualYear) VALUES(?, ?, ?);
get.tmpTransportNr = SELECT transportNr FROM tmptransports WHERE location_ID = ? AND actualYear = ?;
remove.tmpTransportNr = DELETE FROM tmptransports WHERE location_ID = ? AND transportNr = ? AND actualYear = ?;

#transportstate
list.transportstates = SELECT * FROM transportstate WHERE transport_ID = ?;
add.transportstate = INSERT INTO transportstate(transportstate, transport_ID, date) VALUES(?, ?, ?);
update.transportstate = UPDATE transportstate SET date = ? WHERE transport_ID = ? AND transportstate = ?;
remove.transportstate = DELETE FROM transportstate WHERE transport_ID = ?;

#selectedTransportItems
list.selectedTransportItems = SELECT selected_ID, transport_ID, alarmingDateTime \
								 FROM transport_selected where transport_ID =  ?;
add.selectedTransportItem = INSERT INTO transport_selected(selected_ID, alarmingDateTime, transport_ID) VALUES(?, ?, ?);
get.nextSelectedID = select distinct dbo.f_selected_getNextID();
remove.AllSelectedTransportItems = DELETE FROM transport_selected WHERE transport_ID = ?;

#assignVehicle
get.vehicleFromTransport = SELECT * FROM assigned_vehicle WHERE transport_ID = ?;
add.assignedVehicle = INSERT INTO assigned_vehicle(transport_ID, vehicle_ID,vehicletype,driver_ID,driver_lastname,driver_firstname,medic1_ID,medic1_lastname,medic1_firstname,medic2_ID,medic2_lastname,medic2_firstname,location_ID,location_name, note) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
remove.assignedVehicle = DELETE FROM assigned_vehicle WHERE transport_ID = ?;
update.assignedVehicle = UPDATE assigned_vehicle SET vehicle_ID = ?, vehicletype = ?, driver_ID = ?, driver_lastname = ?, driver_firstname = ?, medic1_ID = ?, medic1_lastname = ?,medic1_firstname = ?, medic2_ID = ? , medic2_lastname = ?, medic2_firstname = ?, location_ID = ?, location_name = ?, note = ? WHERE transport_ID = ?;
get.LocationFromTransport = SELECT location_ID FROM assigned_vehicle WHERE transport_ID = ?;

#day info
get.dayInfoByDate = SELECT username, date, message  FROM dayinfo WHERE date = ?;
update.dayInfo = UPDATE dayinfo SET username = ?, message = ? WHERE date = ?;
insert.dayInfo = INSERT INTO dayinfo(username, date, message) VALUES(?, ? ,?);

#dialysis patient
insert.dialysisPatient = INSERT INTO dialysis(dialysis_ID, firstname, lastname, location, plannedStartOfTransport, plannedTimeAtPatient, appointmentTimeAtDialysis, plannedStartForBackTransport, readyTime, fromStreet, fromCity, toStreet, toCity, insurance, stationary, kindOfTransport, assistant, monday, tuesday, wednesday, thursday, friday, saturday, sunday) \
					 	 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
get.nextDialysisID = select distinct dbo.f_dialysis_getNextID();
get.dialysisByID = SELECT * FROM dialysis d \
					LEFT JOIN dialysis_transport dt \
					ON d.dialysis_ID = dt.dialysis_ID \
					WHERE d.dialysis_ID = ?;
list.dialysisPatients = SELECT * FROM dialysis d \
							LEFT JOIN dialysis_transport dt \
							ON d.dialysis_ID = dt.dialysis_ID order by lastname;
update.dialysis = UPDATE dialysis SET firstname = ?, lastname = ?, location = ?, plannedStartOfTransport = ?, plannedTimeAtPatient = ?, appointmentTimeAtDialysis = ?, plannedStartForBackTransport = ?, readyTime = ?, fromStreet = ?, fromCity = ?, toStreet = ?, toCity = ?, insurance = ?, stationary = ?, kindOfTransport = ?, assistant = ?, monday = ?, tuesday = ?, wednesday = ?, thursday = ?, friday = ?, saturday = ?, sunday = ? WHERE dialysis_ID = ?; 
remove.dialysis = DELETE FROM dialysis WHERE dialysis_ID = ?;

#dialysis transport
insert.dialysisTransport = INSERT INTO dialysis_transport(dialysis_id,transport_date,return_date) VALUES(?,?,?);
update.dialysisTransport = UPDATE dialysis_transport set transport_date = ?, return_date = ? where dialysis_id = ?;
delete.dialsyisTransport = DELETE FROM dialysis_transport WHERE dialysis_ID = ?;

#competence
get.competenceByID = SELECT competence, competence_ID FROM competences WHERE competence_ID = ?;
list.competences = SELECT competence_ID, competence FROM competences order by competence;
list.competenceOfStaffMember = SELECT c.competence_ID, c.competence \
							   FROM competences c \
							   INNER JOIN staffmember_competence stc ON \
							   stc.competence_ID = c.competence_ID \
							   WHERE stc.staffmember_ID = ?;
update.competence = UPDATE competences SET competence = ? WHERE competence_ID = ?;
remove.competence = DELETE FROM competences WHERE competence_ID = ?;
insert.competence = INSERT INTO competences(competence_ID, competence) VALUES(?,?);
get.nextCompetenceID = SELECT DISTINCT dbo.f_competence_getNextID();
add.competenceToStaffMember = INSERT INTO staffmember_competence(staffmember_ID, competence_ID) VALUES(?, ?);
delete.competencesOfStaffMember = DELETE FROM staffmember_competence WHERE staffmember_ID = ?;

#Job
get.jobByID = SELECT jobname, job_ID FROM job WHERE job_ID = ?;
get.jobID = SELECT job_ID FROM job WHERE jobname = ?;
list.jobs = SELECT jobname, job_ID FROM job order by jobname;
update.job = UPDATE job SET jobname = ? WHERE job_ID = ?;
remove.job = DELETE FROM job WHERE job_ID = ?;
insert.job = INSERT INTO job(job_ID, jobname) VALUES(?,?);
get.nextJobID = SELECT DISTINCT dbo.f_job_getNextID();

#Queries for the service type
get.servicetypeByID = SELECT servicetype_ID,servicetype FROM servicetype WHERE servicetype_ID = ?;
list.servicetypes = SELECT * FROM servicetype order by servicetype;
list.servicetypesByName = SELECT * FROM servicetype WHERE servicetype = ? ORDER BY servicetype;
update.servicetype = UPDATE servicetype SET servicetype = ? WHERE servicetype_ID = ?;
remove.servicetype = DELETE FROM servicetype WHERE servicetype_ID = ?;
insert.servicetype = INSERT INTO servicetype(servicetype_ID, servicetype) VALUES(?, ?);
get.nextServicetypeID = SELECT DISTINCT dbo.f_servicetype_getNextID();

#sickperson OK
list.sickpersons = SELECT s.sickperson_ID, s.lastname, s.firstname, s.sex, s.city, s.street, s.svnr, s.kindoftransport, s.notes \
						FROM sickperson s;
list.sickpersonsByLastNameSearchString = SELECT s.sickperson_ID, s.lastname, s.firstname, s.sex, s.city, s.street, s.svnr, s.kindoftransport, s.notes \
						FROM sickperson s \
						WHERE s.lastname like ?;
get.sickpersonByID = SELECT s.sickperson_ID, s.lastname, s.firstname, s.sex, s.city, s.street, s.svnr, s.kindoftransport, s.notes \
						FROM sickperson s \
						WHERE s.sickperson_ID = ?;
insert.sickperson = INSERT INTO sickperson(sickperson_ID, lastname, firstname, sex, street, city, svnr, kindoftransport, notes) \
					 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?);
get.nextSickPersonID = select distinct dbo.f_sickperson_getNextID();					 
update.sickperson = UPDATE sickperson SET firstname = ?, lastname = ?, sex = ?, street = ?, city = ?, svnr = ?, kindoftransport = ?, notes = ? WHERE sickperson_ID = ?;
delete.sickperson = DELETE FROM sickperson WHERE sickperson_ID = ?;

#address OK
list.addresses = SELECT a.address_ID, a.street, a.streetnumber, a.city, a.gkz \
						FROM address a;
list.addressesBySearchString = SELECT a.address_ID,a.street, a.streetnumber, a.city, a.gkz \
						FROM address a \
						WHERE a.street like ? and a.streetnumber like ? and a.city like ? and a.gkz like ?;
get.addressByID = SELECT a.address_ID, a.street, a.streetnumber, a.city, a.gkz \
						FROM address a \
						WHERE a.address_ID = ?;
insert.address = INSERT INTO address(address_ID, street, streetnumber, city, gkz) \
					 VALUES(?, ?, ?, ?, ?);
get.nextAddressID = select distinct dbo.f_address_getNextID();					 
update.address = UPDATE address SET street = ?, streetnumber = ?, city = ?, gkz = ? WHERE address_ID = ?;
delete.address = DELETE FROM address WHERE address_ID = ?;

#periods
list.periods = SELECT p.period_ID, p.period, p.serviceTypeCompetence \
						FROM periods p where p.serviceTypeCompetence = ?;
get.periodByID = SELECT p.period_ID, p.period, p.serviceTypeCompetence \
						FROM periods p \
						WHERE p.period_ID = ?;
insert.period = INSERT INTO periods(period_ID, period, serviceTypeCompetence) \
					 VALUES(?, ?, ?);
get.nextPeriodID = select distinct dbo.f_periods_getNextID();					 
update.period = UPDATE periods SET period = ?, serviceTypeCompetence = ? WHERE period_ID = ?;
delete.period = DELETE FROM periods WHERE period_ID = ?;