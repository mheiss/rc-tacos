# Register your queries here!

#Roster OK
list.RosterEntry = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby
				FROM roster ro
				INNER JOIN servicetype st ON
				ro.servicetype_ID LIKE st.servicetype_ID
				INNER JOIN job j ON
				ro.job_ID LIKE j.job_ID
				INNER JOIN location lo ON
				ro.location_ID LIKE lo.location_ID
				INNER JOIN staffmembers e ON
				ro.staffmember_ID LIKE e.staffmember_ID;
list.RosterBystaffmemberID = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby
						FROM roster ro
						INNER JOIN servicetype st ON
						ro.servicetype_ID LIKE st.servicetype_ID
						INNER JOIN job j ON
						ro.job_ID LIKE j.job_ID
						INNER JOIN location lo ON
						ro.location_ID LIKE lo.location_ID
						INNER JOIN staffmembers e ON
						ro.staffmember_ID LIKE e.staffmember_ID
						WHERE ro.staffmember_ID = ?;
get.RosterByID = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby
					FROM roster ro
					INNER JOIN servicetype st ON
					ro.servicetype_ID LIKE st.servicetype_ID
					INNER JOIN job j ON
					ro.job_ID LIKE j.job_ID
					INNER JOIN location lo ON
					ro.location_ID LIKE lo.location_ID
					INNER JOIN staffmembers e ON
					ro.staffmember_ID LIKE e.staffmember_ID
					WHERE ro.roster_ID = ?;
list.RosterByTime = SELECT  ro.roster_ID, ro.location_ID, lo.locationname, e.username, ro.staffmember_ID, ro.servicetype_ID, st.servicetype, ro.job_ID, j.jobname, ro.starttime, ro.endtime, ro.checkIn, ro.checkOut, ro.note, ro.standby
					FROM roster ro
					INNER JOIN servicetype st ON
					ro.servicetype_ID LIKE st.servicetype_ID
					INNER JOIN job j ON
					ro.job_ID LIKE j.job_ID
					INNER JOIN location lo ON
					ro.location_ID LIKE lo.location_ID
					INNER JOIN staffmembers e ON
					ro.staffmember_ID LIKE e.staffmember_ID
					# 1.Startzeitpunkt - 2. Endezeitpunkt
					WHERE ro.endtime >= '?' AND ro.starttime <= '?';
get.RosterEntryId = SELECT roster_ID FROM roster WHERE staffmember_ID = ? AND starttime = ?
insert.RosterEntry = INSERT INTO roster(roster_ID, location_ID, staffmember_ID, servicetype_ID, job_ID, starttime, endtime, checkIn, checkOut, note, standby) VALUES(null, ?, ?, ?, ?, '?', '?', '?', '?', '?', ?);
update.RosterEntry = UPDATE roster SET location_ID = ?, staffmember_ID = ?, servicetype_ID = ?, job_ID = ?, starttime = '?', endtime = '?', checkIn = '?', checkOut = '?', note = '?', standby = ? WHERE roster_ID = ?
delete.RosterEntry = DELETE from roster WHERE roster_ID = ?;

#userslogin
insert.User = INSERT INTO userlogin(username, pwd, authorization, isloggedin, locked) VALUES('?', '?', '?', false, false);
update.User = UPDATE userlogin SET ? = ? WHERE username = ?;

#phonenumbers
insert.Phonenumber = INSERT INTO phonenumbers(phonenumber_ID, phonenumber) VALUES(null, '?');
get.PhoneID = SELECT phonenumber_ID FROM phonenumbers WHERE phonenumber LIKE '?';
update.Phonenumber = UPDATE phonenumbers SET phonenumber = ? WHERE phonenumber_ID = ?;
delete.Phonenumber = DELETE * FROM phonenumbers WHERE phonenumber_ID = ?;
insert.Phonestaffmember = INSERT INTO phone_staffmember(staffmember_ID, phonenumber_ID) VALUES(?,?);
update.Phonestaffmember = UPDATE phone_staffmember SET ? = ? WHERE ? = ?;
delete.Phonestaffmember = DELETE * FROM phone_staffmember WHERE ? = ?;

#location
list.locations = SELECT lo.locationname, lo.street, lo. streetnumber, lo.city, lo.zipcode, pn.phonenumber, lo.note
				 FROM location lo
				 LEFT JOIN phonenumbers pn ON
				 lo.phonenumber_ID LIKE pn.phonenumber_ID
get.LocationByID = SELECT lo.locationname, lo.street, lo. streetnumber, lo.city, lo.zipcode, pn.phonenumber, lo.note
				FROM location lo
				LEFT JOIN phonenumbers pn ON
				lo.phonenumber_ID LIKE pn.phonenumber_ID
				WHERE lo.location_ID LIKE ?

#staffmembers OK
list.staffmembers = SELECT e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, pn.phonenumber ,e.email, u.authorization, u.isloggedin, u.locked, e.city, e.street
				FROM staffmembers e
				INNER JOIN userlogin u ON
				e.username LIKE u.username
				INNER JOIN location lo ON
				e.primaryLocation LIKE lo.location_ID
				INNER JOIN phone_staffmember pe ON
				e.staffmember_ID LIKE pe.staffmember_ID
				INNER JOIN phonenumbers pn ON
				pe.phonenumber_ID LIKE pn.phonenumber_ID;
list.staffmembersFromLocation = SELECT e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, pn.phonenumber ,e.email, u.authorization, u.isloggedin, u.locked, e.city, e.street
								FROM staffmembers e
								INNER JOIN userlogin u ON
								e.username LIKE u.username
								INNER JOIN location lo ON
								e.primaryLocation LIKE lo.location_ID
								INNER JOIN phone_staffmember pe ON
								e.staffmember_ID LIKE pe.staffmember_ID
								INNER JOIN phonenumbers pn ON
								pe.phonenumber_ID LIKE pn.phonenumber_ID
								WHERE lo.locationname LIKE '?';
get.staffmemberByID = SELECT e.primaryLocation, lo.locationname, e.staffmember_ID, e.firstname, e.lastname, e.sex, e.birthday, pn.phonenumber ,e.email, u.authorization, u.isloggedin, u.locked, e.city, e.street
						FROM staffmembers e
						INNER JOIN userlogin u ON
						e.username LIKE u.username
						INNER JOIN location lo ON
						e.primaryLocation LIKE lo.location_ID
						INNER JOIN phone_staffmember pe ON
						e.staffmember_ID LIKE pe.staffmember_ID
						INNER JOIN phonenumbers pn ON
						pe.phonenumber_ID LIKE pn.phonenumber_ID
						WHERE e.staffmember_ID = ?;
insert.staffmember = INSERT INTO staffmembers(staffmember_ID, primaryLocation, firstname, lastname, sex, birthday, email, street, city, username) VALUES(?, ?, '?', '?', ?, '?', '?', '?', '?', '?');
update.staffmember = UPDATE staffmembers SET primaryLocation = ?, firstname = '?', lastname = '?', sex = ?, birthday = '?', email = '?', street = '?', city = '?', username = '?' where staffmember_ID = ?;

#adresses
list.citys = SELECT * FROM citys;
list.adresses = SELECT s.streetname, sn.streetnumber, c.cityname, c.zipcode
				FROM city_street_streetnumber css
				INNER JOIN street_streetnumber ss ON
				css.street_streetnumber_ID LIKE ss.street_streetnumber_ID
				INNER JOIN streets s ON
				ss.street_ID LIKE s.street_ID
				INNER JOIN streetnumbers sn ON
				ss.streetnumber_ID LIKE sn.streetnumber_ID
				INNER JOIN citys c ON
				css.city_ID LIKE c.city_ID;
insert.street = INSERT INTO streets(street_ID, streetname) VALUES(null, '?');
get.streetID = SELECT street_ID FROM streets WHERE streetname LIKE ?
insert.streetnumber = INSERT INTO streetnumbers(streetnumber_ID, streetnumber) VALUES(null, '?');
get.streetnumberID = SELECT streetnumber_ID FROM streetnumbers WHERE streetnumber LIKE ?
insert.street_streetnumber = INSERT INTO street_streetnumber(street_streetnumber_ID, street_ID, streetnumber_ID) VALUES(null, ?, ?);
get.street_streetnumberID = SELECT street_streetnumber_ID FROM street_streetnumber WHERE street_ID LIKE ? AND streetnumber_ID LIKE ?
insert.city = INSERT INTO citys(city_ID, cityname, zipcode) VALUES(null, '?', ?);
get.cityID = SELECT city_ID FROM citys WHERE cityname LIKE ? AND zipcode LIKE ?
insert.city_street_streetnumber = INSERT INTO city_street_streetnumber(city_street_streetnumber_ID, city_ID, street_streetnumber_ID) VALUES(null, ?, ?);
get.city_street_streetnumberID = SELECT city_street_streetnumber_ID FROM city_street_streetnumber WHERE city_ID LIKE ? AND street_Streetnumber_ID LIKE ?

#vehicles
list.vehicles =  SELECT v.vehicle_ID, vt.vehicletype_ID, vs.vehiclestate, lo.locationname, pn.phonenumber, v.note, v.maxSeats, v.mannedSeats
				FROM vehicles v
				INNER JOIN vehicletype vt ON v.vehicletype_ID LIKE vt.vehicletype_ID
				LEFT JOIN vehicles_vehiclestate vvs ON v.vehicle_ID LIKE vvs.vehicle_ID
				LEFT JOIN vehiclestate vs ON vvs.vehiclestate_ID LIKE vs.vehiclestate_ID
				INNER JOIN phonenumbers pn ON v.phonenumber_ID LIKE pn.phonenumber_ID
				INNER JOIN location lo ON v.primaryLocation LIKE lo.location_ID;
insert.vehicle = INSERT INTO vehicles(vehicle_ID, phonenumber_ID, vehicletype_ID, primaryLocation, note, maxSeats, mannedSeats)
				 VALUES('?', ?, '?', ?, '?', ?, ?);
update.vehicle = UPDATE vehicles SET ? = ? where vehicle_ID = '?';
get.vehicleByID = SELECT v.vehicle_ID, vt.vehicletype_ID, vs.vehiclestate, lo.locationname, pn.phonenumber, v.note, v.maxSeats, v.mannedSeats
				FROM vehicles v
				INNER JOIN vehicletype vt ON v.vehicletype_ID LIKE vt.vehicletype_ID
				LEFT JOIN vehicles_vehiclestate vvs ON v.vehicle_ID LIKE vvs.vehicle_ID
				LEFT JOIN vehiclestate vs ON vvs.vehiclestate_ID LIKE vs.vehiclestate_ID
				INNER JOIN phonenumbers pn ON v.phonenumber_ID LIKE pn.phonenumber_ID
				INNER JOIN location lo ON v.primaryLocation LIKE lo.location_ID
				WHERE v.vehicle_ID LIKE '?';

#staffmember_vehicle
insert.staffmemberVehicle = INSERT INTO staffmember_vehicle(staffmember_vehicle_ID, vehicle_ID, driver_ID, medic1_ID, medic2_ID, note, currentLocation)
						 VALUES(null, '?', ?, ?, ?, '?', ?);
update.staffmemberVehicle = UPDATE staffmember_vehicle SET ? = ? where staffmember_vehicle_ID = '?';
list.staffmemberVehicles = SELECT ev.staffmember_vehicle_ID, lo.location_ID AS currentLocation_ID, lo.locationname, e.firstname, e.lastname, j.jobname, v.vehicle_ID, v.primaryLocation, ev.note
						FROM staffmember_vehicle ev
						LEFT JOIN vehicles v ON
						ev.vehicle_ID LIKE v.vehicle_ID
						LEFT JOIN staffmembers e ON
						e.staffmember_ID LIKE ev.driver_ID OR e.staffmember_ID LIKE medic1_ID OR e.staffmember_ID LIKE medic2_ID
						LEFT JOIN roster r ON
						r.staffmember_ID LIKE e.staffmember_ID
						LEFT JOIN job j ON
						r.job_ID LIKE j.job_ID
						LEFT JOIN location lo ON
						ev.currentLocation LIKE lo.location_ID;
list.staffmemberVehicleByID = SELECT ev.staffmember_vehicle_ID, lo.location_ID AS currentLocation_ID, lo.locationname, e.firstname, e.lastname, j.jobname, v.vehicle_ID, v.primaryLocation, ev.note
						FROM staffmember_vehicle ev
						LEFT JOIN vehicles v ON
						ev.vehicle_ID LIKE v.vehicle_ID
						LEFT JOIN staffmembers e ON
						e.staffmember_ID LIKE ev.driver_ID OR e.staffmember_ID LIKE medic1_ID OR e.staffmember_ID LIKE medic2_ID
						LEFT JOIN roster r ON
						r.staffmember_ID LIKE e.staffmember_ID
						LEFT JOIN job j ON
						r.job_ID LIKE j.job_ID
						LEFT JOIN location lo ON
						ev.currentLocation LIKE lo.location_ID
						WHERE ? LIKE ?;

#patients
insert.patient = INSERT INTO patients(patient_ID, firstname, lastname, sex, birthday, from_city_street_Streetnumber_ID, to_city_street_streetnumber_ID)
				 VALUES(null, '?', '?', ?, '?', ?, ?);
get.patientByID = SELECT p.firstname, p.lastname, sex, birthday, t.transport_ID, s.streetname, sn.streetnumber, cy.cityname, cy.zipcode
				FROM patients p
				LEFT JOIN transports t ON
				p.patient_ID LIKE t.patient_ID
				INNER JOIN city_street_streetnumber css ON
				p.from_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID OR
				p.to_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID 
				INNER JOIN citys cy ON
				css.city_ID LIKE cy.city_ID
				INNER JOIN street_streetnumber ss ON css.street_streetnumber_ID LIKE ss.street_streetnumber_ID
				INNER JOIN streets s ON
				ss.street_ID LIKE s.street_ID
				INNER JOIN streetnumbers sn ON
				ss.streetnumber_ID LIKE sn.streetnumber_ID
				WHERE patient_ID LIKE ?;
update.patient = UPDATE patients SET ? = ? where patient_ID = '?';
list.patients = SELECT p.patient_ID, p.firstname, p.lastname, sex, birthday, t.transport_ID, s.streetname, sn.streetnumber, cy.cityname, cy.zipcode
				FROM patients p
				LEFT JOIN transports t ON
				p.patient_ID LIKE t.patient_ID
				INNER JOIN city_street_streetnumber css ON
				p.from_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID OR
				p.to_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID 
				INNER JOIN citys cy ON
				css.city_ID LIKE cy.city_ID
				INNER JOIN street_streetnumber ss ON css.street_streetnumber_ID LIKE ss.street_streetnumber_ID
				INNER JOIN streets s ON
				ss.street_ID LIKE s.street_ID
				INNER JOIN streetnumbers sn ON
				ss.streetnumber_ID LIKE sn.streetnumber_ID;
				
#disease
insert.disease = INSERT INTO disease(disease_ID, disease) VALUES(null, '?');
update.disease = UPDATE disease SET ? = ? where disease_ID = '?';
list.diseases = SELECT * from disease;

#caller
insert.caller = INSERT INTO caller(caller_ID, callername, caller_phonenumber, caller_note)
				VALUES(null, '?', '?', '?');
get.caller = SELECT ca.callername, ca.caller_phonenumber, ca.caller_note, t.transport_ID
		 	 FROM caller ca
		 	 INNER JOIN transports t ON
			 ca.caller_ID LIKE t.caller_ID
			 WHERE caller_ID LIKE ?
update.caller = UPDATE caller SET ? = ? where caller_ID = '?';
list.callers = SELECT ca.*, t.transport_ID
			   FROM caller ca
			   INNER JOIN transports t ON
			   ca.caller_ID LIKE t.caller_ID;

#transport
list.transports = SELECT t.transport_ID, d.direction, dis.disease, t.diseasenote, t.priority, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.ambulant_stationary, t.assistant, t.transportstate, tt.transporttype, ca.callername, ca.caller_phonenumber, ca.caller_note, no.name AS notyfied, tn.date AS notyficationDate, p.firstname, p.lastname, p.sex, p.birthday, s.streetname, sn.streetnumber, cy.cityname, cy.zipcode
				FROM transports t
				LEFT JOIN directions d ON
				d.direction_ID LIKE t.direction_ID
				LEFT JOIN disease dis ON
				dis.disease_ID LIKE t.disease_ID
				LEFT JOIN transporttype tt ON
				tt.transporttype_ID LIKE t.transporttype_ID
				LEFT JOIN caller ca ON
				t.caller_ID LIKE ca.caller_ID
				LEFT JOIN transport_notyfied tn ON
				tn.transport_ID LIKE t.transport_ID
				LEFT JOIN notyfied no ON
				no.notyfied_ID LIKE tn.notyfied_ID
				LEFT JOIN patients p ON
				p.patient_ID LIKE t.patient_ID
				INNER JOIN city_street_streetnumber css ON
				p.from_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID OR
				p.to_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID 
				INNER JOIN citys cy ON
				css.city_ID LIKE cy.city_ID
				INNER JOIN street_streetnumber ss ON css.street_streetnumber_ID LIKE ss.street_streetnumber_ID
				INNER JOIN streets s ON
				ss.street_ID LIKE s.street_ID
				INNER JOIN streetnumbers sn ON
				ss.streetnumber_ID LIKE sn.streetnumber_ID
				WHERE t.creationDate BETWEEN ? AND ?;
list.transportByID = SELECT t.transport_ID, d.direction, dis.disease, t.diseasenote, t.priority, t.feedback, t.creationDate, t.departure, t.appointment, t.appointmentPatient, t.ambulant_stationary, t.assistant, t.transportstate, tt.transporttype, ca.callername, ca.caller_phonenumber, ca.caller_note, no.name AS notyfied, tn.date AS notyficationDate, p.firstname, p.lastname, p.sex, p.birthday, s.streetname, sn.streetnumber, cy.cityname, cy.zipcode
					FROM transports t
					LEFT JOIN directions d ON
					d.direction_ID LIKE t.direction_ID
					LEFT JOIN disease dis ON
					dis.disease_ID LIKE t.disease_ID
					LEFT JOIN transporttype tt ON
					tt.transporttype_ID LIKE t.transporttype_ID
					LEFT JOIN caller ca ON
					t.caller_ID LIKE ca.caller_ID
					LEFT JOIN transport_notyfied tn ON
					tn.transport_ID LIKE t.transport_ID
					LEFT JOIN notyfied no ON
					no.notyfied_ID LIKE tn.notyfied_ID
					LEFT JOIN patients p ON
					p.patient_ID LIKE t.patient_ID
					INNER JOIN city_street_streetnumber css ON
					p.from_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID OR
					p.to_city_street_streetnumber_ID LIKE css.city_street_streetnumber_ID 
					INNER JOIN citys cy ON
					css.city_ID LIKE cy.city_ID
					INNER JOIN street_streetnumber ss ON css.street_streetnumber_ID LIKE ss.street_streetnumber_ID
					INNER JOIN streets s ON
					ss.street_ID LIKE s.street_ID
					INNER JOIN streetnumbers sn ON
					ss.streetnumber_ID LIKE sn.streetnumber_ID
					WHERE ? LIKE ?;
insert.transport = INSERT INTO transports(transport_ID, direction_ID, caller_ID, patient_ID, createdBy_ID, disease_ID, diseasenote, priority, feedback, creationDate, departure, appointment, appointmentPatient, ambulant_stationary, assistant, staffmember_vehicle_ID, transporttype_ID, transportstate)
VALUES('?', ?, ?, ?, ?, ?, '?', ?, '?', '?', ?, ?, ?, ?, ?, ?, ?, ?);
update.transport = UPDATE transports SET ? = ? where transport_ID = '?';

//DONE

